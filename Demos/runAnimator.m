% Generate animator from results file
resultsParser = ResultsParser("Demos/results.mat");
timeSeconds = resultsParser.getTime();
x = resultsParser.getProcessedTrace(1);
ax = gca;
animator = AxisTraceAnimator( ...
    ax, ...
    timeSeconds, ...
    x, ...
    "PlaybackSpeed", 0.5, ...
    "PlaybackFps", 30 ...
    );

% Plot interactive scalebar on axis
axisScalebar = AxisScalebar(animator.getAxis());
scalebar = axisScalebar.getScalebar();
horizontalText = axisScalebar.getHorizontalText();
verticalText = axisScalebar.getVerticalText();

% Set aesthetics for scalebar
scalebar.setWidth(0.1);
scalebar.setHeight(10);
set( ...
    scalebar.getLine(), ...
    "Color", "black", ...
    "LineStyle", "-", ...
    "LineWidth", 4, ...
    "Marker", "none", ...
    "MarkerSize", 6 ...
    );

% Set aesthetics for horizontal line
horizontalText.setUnit('ms');
horizontalText.setLength(0.2);
horizontalText.setMultiplier(1e3);
set( ...
    horizontalText.getText(), ...
    "FontSize", 12, ...
    "FontWeight", "normal", ...
    "FontName", "Arial", ...
    "Color", "black", ...
    "HorizontalAlignment", "left", ...
    "Rotation", 0, ...
    "Interpreter", "tex" ...
    );

% Set aesthetics for vertical line
verticalText.setUnit('nm');
verticalText.setLength(10);
verticalText.setMultiplier(1);
set( ...
    verticalText.getText(), ...
    "FontSize", 12, ...
    "FontWeight", "normal", ...
    "FontName", "Arial", ...
    "Color", "black", ...
    "HorizontalAlignment", "left", ...
    "Rotation", 90, ...
    "Interpreter", "tex" ...
    );

% Set aesthetics for figure
set( ...
    animator.getFigure(), ...
    "Color", "white" ...
    );

% Set aesthetics for line
set( ...
    animator.getAnimatedLine(), ...
    "Color", "black", ...
    "LineStyle", '-', ...
    "LineWidth", 1, ...
    "Marker", "none", ...
    "MarkerSize", 6, ...
    "MarkerEdgeColor", "auto", ...
    "MarkerFaceColor", "none" ...
    );

% Set aesthetics for axis
set( ...
    animator.getAxis(), ...
    "XLim", [timeSeconds(1), timeSeconds(end)], ...
    "YLim", [min(x), max(x)], ...
    "Position", [0.05, 0.05, 0.9, 0.9], ...
    "Visible", "on", ...
    "Clipping", "off" ...
    );

% Start animation on startup
animator.startAnimation();
